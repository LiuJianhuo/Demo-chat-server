IncomingMessage {




    Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                onread: [Function: onStreamRead],
            onconnection: null,
                _consumed: true,
                [Symbol(owner)]: [Circular] },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: true,
                paused: false,
                emitClose: false,
                autoDestroy: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            _events:
        [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
            close: [Function: socketOnClose],
            data: [Function: socketOnData],
            error: [Function: socketOnError] },
        _eventsCount: 5,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 1,
                prefinished: false,
                errorEmitted: false,
                emitClose: false,
                autoDestroy: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        _server:
            Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        timeout: 0,
            parser: null,
            on: [Function],
            _paused: false,
            _peername: { address: '::1', family: 'IPv6', port: 52145 },
        [Symbol(asyncId)]: 7,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]:
        Timeout {
            _called: false,
                _idleTimeout: -1,
                _idlePrev: null,
                _idleNext: null,
                _idleStart: 3454,
                _onTimeout: null,
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(unrefed)]: true,
                [Symbol(asyncId)]: 8,
                [Symbol(triggerId)]: 7 },
        [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(websocket)]:
        WebSocket {
            _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                readyState: 1,
                protocol: '',
                _binaryType: 'nodebuffer',
                _closeFrameReceived: false,
                _closeFrameSent: false,
                _closeMessage: '',
                _closeTimer: null,
                _closeCode: 1006,
                _extensions: {},
            _isServer: true,
                _receiver: [Receiver],
                _sender: [Sender],
                _socket: [Circular] } },
    connection:
        Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                onread: [Function: onStreamRead],
            onconnection: null,
                _consumed: true,
                [Symbol(owner)]: [Circular] },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: true,
                paused: false,
                emitClose: false,
                autoDestroy: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            _events:
        [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
            close: [Function: socketOnClose],
            data: [Function: socketOnData],
            error: [Function: socketOnError] },
        _eventsCount: 5,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 1,
                prefinished: false,
                errorEmitted: false,
                emitClose: false,
                autoDestroy: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        _server:
            Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        timeout: 0,
            parser: null,
            on: [Function],
            _paused: false,
            _peername: { address: '::1', family: 'IPv6', port: 52145 },
        [Symbol(asyncId)]: 7,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]:
        Timeout {
            _called: false,
                _idleTimeout: -1,
                _idlePrev: null,
                _idleNext: null,
                _idleStart: 3454,
                _onTimeout: null,
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(unrefed)]: true,
                [Symbol(asyncId)]: 8,
                [Symbol(triggerId)]: 7 },
        [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(websocket)]:
        WebSocket {
            _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                readyState: 1,
                protocol: '',
                _binaryType: 'nodebuffer',
                _closeFrameReceived: false,
                _closeFrameSent: false,
                _closeMessage: '',
                _closeTimer: null,
                _closeCode: 1006,
                _extensions: {},
            _isServer: true,
                _receiver: [Receiver],
                _sender: [Sender],
                _socket: [Circular] } },
    httpVersionMajor: 1,
        httpVersionMinor: 1,
        httpVersion: '1.1',
        complete: true,
        headers:
    { host: 'localhost:3000',
        connection: 'Upgrade',
        pragma: 'no-cache',
        'cache-control': 'no-cache',
        upgrade: 'websocket',
        origin: 'http://localhost:8080',
        'sec-websocket-version': '13',
        'user-agent':
        'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36',
            'accept-encoding': 'gzip, deflate, br',
        'accept-language': 'zh-CN,zh;q=0.9',
        cookie:
        '__guid=111872281.3335016825760991000.1566717383172.8083; monitor_count=530',
            'sec-websocket-key': 't84zOdzEEeRCkSDVDnwXbQ==',
        'sec-websocket-extensions': 'permessage-deflate; client_max_window_bits' },
    rawHeaders:
        [ 'Host',
            'localhost:3000',
            'Connection',
            'Upgrade',
            'Pragma',
            'no-cache',
            'Cache-Control',
            'no-cache',
            'Upgrade',
            'websocket',
            'Origin',
            'http://localhost:8080',
            'Sec-WebSocket-Version',
            '13',
            'User-Agent',
            'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/63.0.3239.132 Safari/537.36',
            'Accept-Encoding',
            'gzip, deflate, br',
            'Accept-Language',
            'zh-CN,zh;q=0.9',
            'Cookie',
            '__guid=111872281.3335016825760991000.1566717383172.8083; monitor_count=530',
            'Sec-WebSocket-Key',
            't84zOdzEEeRCkSDVDnwXbQ==',
            'Sec-WebSocket-Extensions',
            'permessage-deflate; client_max_window_bits' ],
            trailers: {},
    rawTrailers: [],
        aborted: false,
        upgrade: true,
        url: '/chat/.websocket',
        method: 'GET',
        statusCode: null,
        statusMessage: null,
        client:
    Socket {
        connecting: false,
            _hadError: false,
            _handle:
        TCP {
            reading: true,
                onread: [Function: onStreamRead],
            onconnection: null,
                _consumed: true,
                [Symbol(owner)]: [Circular] },
        _parent: null,
            _host: null,
            _readableState:
        ReadableState {
            objectMode: false,
                highWaterMark: 16384,
                buffer: BufferList { head: null, tail: null, length: 0 },
            length: 0,
                pipes: null,
                pipesCount: 0,
                flowing: true,
                ended: false,
                endEmitted: false,
                reading: true,
                sync: false,
                needReadable: true,
                emittedReadable: false,
                readableListening: false,
                resumeScheduled: true,
                paused: false,
                emitClose: false,
                autoDestroy: false,
                destroyed: false,
                defaultEncoding: 'utf8',
                awaitDrain: 0,
                readingMore: false,
                decoder: null,
                encoding: null },
        readable: true,
            _events:
        [Object: null prototype] {
            end: [Array],
                timeout: [Function: socketOnTimeout],
            close: [Function: socketOnClose],
            data: [Function: socketOnData],
            error: [Function: socketOnError] },
        _eventsCount: 5,
            _maxListeners: undefined,
            _writableState:
        WritableState {
            objectMode: false,
                highWaterMark: 16384,
                finalCalled: false,
                needDrain: false,
                ending: false,
                ended: false,
                finished: false,
                destroyed: false,
                decodeStrings: false,
                defaultEncoding: 'utf8',
                length: 0,
                writing: false,
                corked: 0,
                sync: false,
                bufferProcessing: false,
                onwrite: [Function: bound onwrite],
            writecb: null,
                writelen: 0,
                bufferedRequest: null,
                lastBufferedRequest: null,
                pendingcb: 1,
                prefinished: false,
                errorEmitted: false,
                emitClose: false,
                autoDestroy: false,
                bufferedRequestCount: 0,
                corkedRequestsFree: [Object] },
        writable: true,
            allowHalfOpen: true,
            _sockname: null,
            _pendingData: null,
            _pendingEncoding: '',
            server:
        Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        _server:
            Server {
            _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _connections: 1,
                _handle: [TCP],
                _usingWorkers: false,
                _workers: [],
                _unref: false,
                allowHalfOpen: true,
                pauseOnConnect: false,
                httpAllowHalfOpen: false,
                timeout: 120000,
                keepAliveTimeout: 5000,
                maxHeadersCount: null,
                headersTimeout: 40000,
                _connectionKey: '6::::3000',
                [Symbol(IncomingMessage)]: [Function],
                [Symbol(ServerResponse)]: [Function],
                [Symbol(asyncId)]: 4 },
        timeout: 0,
            parser: null,
            on: [Function],
            _paused: false,
            _peername: { address: '::1', family: 'IPv6', port: 52145 },
        [Symbol(asyncId)]: 7,
            [Symbol(lastWriteQueueSize)]: 0,
            [Symbol(timeout)]:
        Timeout {
            _called: false,
                _idleTimeout: -1,
                _idlePrev: null,
                _idleNext: null,
                _idleStart: 3454,
                _onTimeout: null,
                _timerArgs: undefined,
                _repeat: null,
                _destroyed: false,
                [Symbol(unrefed)]: true,
                [Symbol(asyncId)]: 8,
                [Symbol(triggerId)]: 7 },
        [Symbol(kBytesRead)]: 0,
            [Symbol(kBytesWritten)]: 0,
            [Symbol(websocket)]:
        WebSocket {
            _events: [Object],
                _eventsCount: 1,
                _maxListeners: undefined,
                readyState: 1,
                protocol: '',
                _binaryType: 'nodebuffer',
                _closeFrameReceived: false,
                _closeFrameSent: false,
                _closeMessage: '',
                _closeTimer: null,
                _closeCode: 1006,
                _extensions: {},
            _isServer: true,
                _receiver: [Receiver],
                _sender: [Sender],
                _socket: [Circular] } },
    _consuming: false,
        _dumped: false,
        parser: null,
        ws:
    WebSocket {
        _events: [Object: null prototype] { close: [Function] },
        _eventsCount: 1,
            _maxListeners: undefined,
            readyState: 1,
            protocol: '',
            _binaryType: 'nodebuffer',
            _closeFrameReceived: false,
            _closeFrameSent: false,
            _closeMessage: '',
            _closeTimer: null,
            _closeCode: 1006,
            _extensions: {},
        _isServer: true,
            _receiver:
        Receiver {
            _writableState: [WritableState],
                writable: true,
                _events: [Object],
                _eventsCount: 6,
                _maxListeners: undefined,
                _binaryType: 'nodebuffer',
                _extensions: {},
            _maxPayload: 104857600,
                _bufferedBytes: 0,
                _buffers: [],
                _compressed: false,
                _payloadLength: 0,
                _mask: undefined,
                _fragmented: 0,
                _masked: false,
                _fin: false,
                _opcode: 0,
                _totalPayloadLength: 0,
                _messageLength: 0,
                _fragments: [],
                _state: 0,
                _loop: false,
                [Symbol(websocket)]: [Circular] },
        _sender:
            Sender {
            _extensions: {},
            _socket: [Socket],
                _firstFragment: true,
                _compress: false,
                _bufferedBytes: 0,
                _deflating: false,
                _queue: [] },
        _socket:
            Socket {
            connecting: false,
                _hadError: false,
                _handle: [TCP],
                _parent: null,
                _host: null,
                _readableState: [ReadableState],
                readable: true,
                _events: [Object],
                _eventsCount: 5,
                _maxListeners: undefined,
                _writableState: [WritableState],
                writable: true,
                allowHalfOpen: true,
                _sockname: null,
                _pendingData: null,
                _pendingEncoding: '',
                server: [Server],
                _server: [Server],
                timeout: 0,
                parser: null,
                on: [Function],
                _paused: false,
                _peername: [Object],
                [Symbol(asyncId)]: 7,
                [Symbol(lastWriteQueueSize)]: 0,
                [Symbol(timeout)]:
            Timeout {
                _called: false,
                    _idleTimeout: -1,
                    _idlePrev: null,
                    _idleNext: null,
                    _idleStart: 3454,
                    _onTimeout: null,
                    _timerArgs: undefined,
                    _repeat: null,
                    _destroyed: false,
                    [Symbol(unrefed)]: true,
                    [Symbol(asyncId)]: 8,
                    [Symbol(triggerId)]: 7 },
            [Symbol(kBytesRead)]: 0,
                [Symbol(kBytesWritten)]: 0,
                [Symbol(websocket)]: [Circular] } },
    wsHandled: true,
        next: [Function: next],
    baseUrl: '',
        originalUrl: '/chat/.websocket',
        _parsedUrl:
    Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/chat/.websocket',
            path: '/chat/.websocket',
            href: '/chat/.websocket',
            _raw: '/chat/.websocket' },
    params: {},
    query: {},
    res:
        ServerResponse {
        _events:
            [Object: null prototype] {
            end: [Function: onevent],
            finish: [Function: onevent],
            socket: [Function: onSocket] },
        _eventsCount: 3,
            _maxListeners: undefined,
            output: [],
            outputEncodings: [],
            outputCallbacks: [],
            outputSize: 0,
            writable: true,
            _last: false,
            chunkedEncoding: false,
            shouldKeepAlive: true,
            useChunkedEncodingByDefault: true,
            sendDate: true,
            _removedConnection: false,
            _removedContLen: false,
            _removedTE: false,
            _contentLength: null,
            _hasBody: true,
            _trailer: '',
            finished: false,
            _headerSent: false,
            socket: null,
            connection: null,
            _header: null,
            _onPendingData: [Function: noopPendingOutput],
        _sent100: false,
            _expect_continue: false,
            writeHead: [Function: writeHead],
        req: [Circular],
            locals: [Object: null prototype] {},
        _startAt: undefined,
            _startTime: undefined,
            __onFinished: { [Function: listener] queue: [Array] },
        [Symbol(isCorked)]: false,
            [Symbol(outHeadersKey)]: [Object: null prototype] { 'x-powered-by': [Array] } },
    _startAt: [ 2456, 403019999 ],
        _startTime: 2019-08-30T12:01:15.266Z,
        _remoteAddress: '::1',
        body: {},
    secret: undefined,
        cookies:
    { __guid: '111872281.3335016825760991000.1566717383172.8083',
        monitor_count: '530' },
    signedCookies: [Object: null prototype] {},
    _parsedOriginalUrl:
        Url {
        protocol: null,
            slashes: null,
            auth: null,
            host: null,
            port: null,
            hostname: null,
            hash: null,
            search: null,
            query: null,
            pathname: '/chat/.websocket',
            path: '/chat/.websocket',
            href: '/chat/.websocket',
            _raw: '/chat/.websocket' },
    route:
        Route {
        path: '/chat/.websocket',
            stack: [ [Layer] ],
            methods: { get: true } } }
